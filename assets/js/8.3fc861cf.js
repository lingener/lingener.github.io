(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{625:function(s,n,a){s.exports=a.p+"assets/img/Image.8b0314f1.png"},626:function(s,n,a){s.exports=a.p+"assets/img/存储器的层次结构.28a7243d.png"},627:function(s,n,a){s.exports=a.p+"assets/img/image-20210518154201610.67abc968.png"},628:function(s,n,a){s.exports=a.p+"assets/img/image-20210518154411676.b1e3b1c8.png"},629:function(s,n,a){s.exports=a.p+"assets/img/超线程.bee838a3.png"},630:function(s,n,a){s.exports=a.p+"assets/img/image-20210518160329114.6c9a6639.png"},631:function(s,n,a){s.exports=a.p+"assets/img/image-20210518183140227.fb72f884.png"},632:function(s,n,a){s.exports=a.p+"assets/img/image-20210519112735470.6b390850.png"},633:function(s,n,a){s.exports=a.p+"assets/img/image-20210521110034729.e46eabf9.png"},634:function(s,n,a){s.exports=a.p+"assets/img/image-20210521110519501.cf0aa829.png"},635:function(s,n,a){s.exports=a.p+"assets/img/image-20210521110745203.505a5841.png"},695:function(s,n,a){"use strict";a.r(n);var t=a(3),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"相关书籍推荐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相关书籍推荐"}},[s._v("#")]),s._v(" 相关书籍推荐")]),s._v(" "),t("p",[s._v("读书的原则：不求甚解，观其大略")]),s._v(" "),t("p",[s._v("你如果进到庐山里头，二话不说，蹲下头来，弯下腰，就对着某棵树某棵小草猛研究而不是说先把庐山的整体脉络跟那研究清楚了，那么你的学习方法肯定效率巨低而且特别痛苦，最重要的还是慢慢地还打击你的积极性，说我的学习怎么那么不happy啊，怎么那么特没劲那，因为你的学习方法错了，大体读明白，先拿来用，用着用着，很多道理你就明白了")]),s._v(" "),t("p",[s._v("▪《编码：隐匿在计算机软硬件背后的语言》")]),s._v(" "),t("p",[s._v("▪《深入理解计算机系统》")]),s._v(" "),t("p",[s._v("▪语言：C JAVA  K&R《C程序设计语言》《C Primer Plus》")]),s._v(" "),t("p",[s._v("▪ 数据结构与算法： -- 毕生的学习 leetCode")]),s._v(" "),t("p",[s._v("–《Java数据结构与算法》《算法》")]),s._v(" "),t("p",[s._v("–《算法导论》《计算机程序设计艺术》//难")]),s._v(" "),t("p",[s._v("▪操作系统："),t("em",[s._v("Linux内核源码解析")]),s._v("  Linux内核设计与实现 30天自制操作系统")]),s._v(" "),t("p",[s._v("▪网络：机工《TCP/IP详解》卷一 翻译一般")]),s._v(" "),t("p",[s._v("▪编译原理：机工 龙书 《编译原理》 《编程语言实现模式》马语")]),s._v(" "),t("p",[s._v("▪数据库：SQLite源码 Derby - JDK自带数据库")]),s._v(" "),t("h1",{attrs:{id:"硬件基础知识"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#硬件基础知识"}},[s._v("#")]),s._v(" 硬件基础知识")]),s._v(" "),t("p",[t("img",{attrs:{src:a(625),alt:"Image"}})]),s._v(" "),t("h2",{attrs:{id:"cpu的制作过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cpu的制作过程"}},[s._v("#")]),s._v(" CPU的制作过程")]),s._v(" "),t("p",[s._v("Intel cpu的制作过程")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://haokan.baidu.com/v?vid=11928468945249380709&pd=bjh&fr=bjhauthor&type=video",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://haokan.baidu.com/v?vid=11928468945249380709&pd=bjh&fr=bjhauthor&type="),t("OutboundLink")],1),t("a",{attrs:{href:"https://haokan.baidu.com/v?vid=11928468945249380709&pd=bjh&fr=bjhauthor&type=video",target:"_blank",rel:"noopener noreferrer"}},[s._v("video"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("CPU是如何制作的（文字描述）")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.sohu.com/a/255397866_468626",target:"_blank",rel:"noopener noreferrer"}},[s._v("https"),t("OutboundLink")],1),t("a",{attrs:{href:"https://www.sohu.com/a/255397866_468626",target:"_blank",rel:"noopener noreferrer"}},[s._v("😕/www.sohu.com/a/255397866_468626"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"cpu的原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cpu的原理"}},[s._v("#")]),s._v(" CPU的原理")]),s._v(" "),t("p",[s._v("计算机需要解决的最根本问题：如何代表数字")]),s._v(" "),t("p",[s._v("晶体管是如何工作的：")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://haokan.baidu.com/v?vid=16026741635006191272&pd=bjh&fr=bjhauthor&type=video",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://haokan.baidu.com/v?vid=16026741635006191272&pd=bjh&fr=bjhauthor&type="),t("OutboundLink")],1),t("a",{attrs:{href:"https://haokan.baidu.com/v?vid=16026741635006191272&pd=bjh&fr=bjhauthor&type=video",target:"_blank",rel:"noopener noreferrer"}},[s._v("video"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("晶体管的工作原理：")]),s._v(" "),t("p",[s._v("https://www.bilibili.com/video/av47388949?p=2")]),s._v(" "),t("h2",{attrs:{id:"汇编语言-机器语言-的执行过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#汇编语言-机器语言-的执行过程"}},[s._v("#")]),s._v(" 汇编语言（机器语言）的执行过程")]),s._v(" "),t("p",[s._v("汇编语言的本质：机器语言的助记符 其实它就是机器语言")]),s._v(" "),t("p",[s._v("计算机通电 -> CPU读取内存中程序（电信号输入）")]),s._v(" "),t("p",[s._v("->时钟发生器不断震荡通断电 ->推动CPU内部一步一步执行")]),s._v(" "),t("p",[s._v("（执行多少步取决于指令需要的时钟周期）")]),s._v(" "),t("p",[s._v("->计算完成->写回（电信号）->写给显卡输出（sout，或者图形）")]),s._v(" "),t("h2",{attrs:{id:"量子计算机"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#量子计算机"}},[s._v("#")]),s._v(" "),t("em",[s._v("量子计算机")])]),s._v(" "),t("p",[s._v("量子比特，同时表示1 0")]),s._v(" "),t("h2",{attrs:{id:"cpu的基本组成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cpu的基本组成"}},[s._v("#")]),s._v(" CPU的基本组成")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("PC -> Program Counter 程序计数器 （记录当前指令地址）")])]),s._v(" "),t("li",[t("p",[s._v("Registers -> 暂时存储CPU计算需要用到的数据")])]),s._v(" "),t("li",[t("p",[s._v("ALU -> Arithmetic & Logic Unit 运算单元")])]),s._v(" "),t("li",[t("p",[s._v("CU -> Control Unit 控制单元")])]),s._v(" "),t("li",[t("p",[s._v("MMU -> Memory Management Unit 内存管理单元")])]),s._v(" "),t("li",[t("p",[s._v("cache")]),s._v(" "),t("ul",[t("li",[t("img",{attrs:{src:a(626),alt:"image-20210518153955311"}})]),s._v(" "),t("li",[t("img",{attrs:{src:a(627),alt:"image-20210518154201610"}})]),s._v(" "),t("li",[t("img",{attrs:{src:a(628),alt:"image-20210518154411676"}})])])]),s._v(" "),t("li",[t("p",[s._v("超线程")]),s._v(" "),t("p",[s._v("一个ALU对应多个PC|Registers，所谓的四核八线程")])])]),s._v(" "),t("p",[t("img",{attrs:{src:a(629),alt:"image-20210518153524339"}})]),s._v(" "),t("h2",{attrs:{id:"缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[s._v("#")]),s._v(" 缓存")]),s._v(" "),t("p",[s._v("一致性协议：https://www.cnblogs.com/z00377750/p/9180644.html")]),s._v(" "),t("p",[s._v("程序局部性原理，按快读取可以提高效率")]),s._v(" "),t("p",[t("img",{attrs:{src:a(630),alt:"image-20210518160329114"}})]),s._v(" "),t("p",[s._v("缓存行：")]),s._v(" "),t("p",[s._v("缓存行越大，局部性空间效率越高，但读取时间慢")]),s._v(" "),t("p",[s._v("缓存行越小，局部性空间效率越低，但读取时间快")]),s._v(" "),t("p",[s._v("取一个折中值，目前多用：")]),s._v(" "),t("p",[s._v("64字节")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("package com.mashibing.juc.c_028_FalseSharing;\n\npublic class T03_CacheLinePadding {\n\n    public static volatile long[] arr = new long[2];\n\n    public static void main(String[] args) throws Exception {\n        Thread t1 = new Thread(()->{\n            for (long i = 0; i < 10000_0000L; i++) {\n                arr[0] = i;\n            }\n        });\n\n        Thread t2 = new Thread(()->{\n            for (long i = 0; i < 10000_0000L; i++) {\n                arr[1] = i;\n            }\n        });\n\n        final long start = System.nanoTime();\n        t1.start();\n        t2.start();\n        t1.join();\n        t2.join();\n        System.out.println((System.nanoTime() - start)/100_0000);\n    }\n}\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("package com.mashibing.juc.c_028_FalseSharing;\n\npublic class T04_CacheLinePadding {\n\n    public static volatile long[] arr = new long[16];\n\n    public static void main(String[] args) throws Exception {\n        Thread t1 = new Thread(()->{\n            for (long i = 0; i < 10000_0000L; i++) {\n                arr[0] = i;\n            }\n        });\n\n        Thread t2 = new Thread(()->{\n            for (long i = 0; i < 10000_0000L; i++) {\n                arr[8] = i;\n            }\n        });\n\n        final long start = System.nanoTime();\n        t1.start();\n        t2.start();\n        t1.join();\n        t2.join();\n        System.out.println((System.nanoTime() - start)/100_0000);\n    }\n}\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br")])]),t("p",[s._v("缓存行对齐：对于有些特别敏感的数字，会存在线程高竞争的访问，为了保证不发生伪共享，可以使用缓存航对齐的编程方式")]),s._v(" "),t("p",[s._v("JDK7中，很多采用long padding提高效率")]),s._v(" "),t("p",[s._v("JDK8，加入了@Contended注解（实验）需要加上：JVM -XX:-RestrictContended")]),s._v(" "),t("h2",{attrs:{id:"乱序执行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#乱序执行"}},[s._v("#")]),s._v(" 乱序执行")]),s._v(" "),t("p",[s._v("https://preshing.com/20120515/memory-reordering-caught-in-the-act/")]),s._v(" "),t("p",[s._v("jvm/jmm/Disorder.java")]),s._v(" "),t("h3",{attrs:{id:"禁止乱序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#禁止乱序"}},[s._v("#")]),s._v(" 禁止乱序")]),s._v(" "),t("p",[s._v("CPU层面：Intel -> 原语(mfence lfence sfence) 或者锁总线")]),s._v(" "),t("p",[s._v("JVM层级：8个hanppens-before原则 4个内存屏障 （LL LS SL SS）")]),s._v(" "),t("p",[s._v("as-if-serial : 不管硬件什么顺序，单线程执行的结果不变，看上去像是serial")]),s._v(" "),t("h2",{attrs:{id:"合并写-不重要"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#合并写-不重要"}},[s._v("#")]),s._v(" 合并写（不重要）")]),s._v(" "),t("p",[s._v("Write Combining Buffer")]),s._v(" "),t("p",[s._v("一般是4个字节")]),s._v(" "),t("p",[s._v("由于ALU速度太快，所以在写入L1的同时，写入一个WC Buffer，满了之后，再直接更新到L2")]),s._v(" "),t("h2",{attrs:{id:"numa"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#numa"}},[s._v("#")]),s._v(" NUMA")]),s._v(" "),t("p",[s._v("Non Uniform Memory Access  非统一访问内存")]),s._v(" "),t("p",[s._v("ZGC - NUMA aware")]),s._v(" "),t("p",[s._v("分配内存会优先分配该线程所在CPU的最近内存")]),s._v(" "),t("p",[t("img",{attrs:{src:a(631),alt:"image-20210518183140227"}})]),s._v(" "),t("h2",{attrs:{id:"启动过程-不重要"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动过程-不重要"}},[s._v("#")]),s._v(" 启动过程（不重要）")]),s._v(" "),t("p",[s._v("通电 -> bios uefi 工作 -> 自检 -> 到硬盘固定位置加载bootloader -> 读取可配置信息 -> CMOS")]),s._v(" "),t("h1",{attrs:{id:"os"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#os"}},[s._v("#")]),s._v(" OS")]),s._v(" "),t("h2",{attrs:{id:"内核分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内核分类"}},[s._v("#")]),s._v(" 内核分类")]),s._v(" "),t("p",[s._v("微内核 - 弹性部署 5G IoT")]),s._v(" "),t("p",[s._v("宏内核 - PC phone")]),s._v(" "),t("p",[s._v("外核 - 科研 实验中 为应用定制操作系统 (多租户 request-based GC JVM)")]),s._v(" "),t("h2",{attrs:{id:"用户态与内核态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用户态与内核态"}},[s._v("#")]),s._v(" 用户态与内核态")]),s._v(" "),t("p",[s._v("cpu分不同的指令级别")]),s._v(" "),t("p",[s._v("linux内核跑在ring 0级， 用户程序跑在ring 3，对于系统的关键访问，需要经过kernel的同意，保证系统健壮性")]),s._v(" "),t("p",[s._v("内核执行的操作 - > 200多个系统调用 sendfile read write pthread fork")]),s._v(" "),t("p",[s._v("JVM -> 站在OS老大的角度，就是个普通程序")]),s._v(" "),t("h1",{attrs:{id:"进程-线程-纤程-中断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程-线程-纤程-中断"}},[s._v("#")]),s._v(" 进程 线程 纤程 中断")]),s._v(" "),t("p",[s._v("面试高频：进程和线程有什么区别？")]),s._v(" "),t("p",[s._v("答案：进程就是一个程序运行起来的状态，线程是一个进程中的不同的执行路径。专业：进程是OS分配资源的基本单位，线程是执行调度的基本单位。分配资源最重要的是：独立的内存空间，线程调度执行（线程共享进程的内存空间，没有自己独立的内存空间）")]),s._v(" "),t("p",[s._v("纤程：用户态的线程，线程中的线程，切换和调度不需要经过OS")]),s._v(" "),t("p",[s._v("优势：1：占有资源很少 OS : 线程1M Fiber：4K 2：切换比较简单 3：启动很多个10W+")]),s._v(" "),t("p",[s._v("目前2020 3 22支持内置纤程的语言：Kotlin Scala Go Python(lib)... Java? （open jdk : loom）")]),s._v(" "),t("h2",{attrs:{id:"java中对于纤程的支持-没有内置-盼望内置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java中对于纤程的支持-没有内置-盼望内置"}},[s._v("#")]),s._v(" Java中对于纤程的支持：没有内置，盼望内置")]),s._v(" "),t("p",[s._v("利用Quaser库（不成熟）")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0"\n         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>mashibing.com</groupId>\n    <artifactId>HelloFiber</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <dependencies>\n        \x3c!-- https://mvnrepository.com/artifact/co.paralleluniverse/quasar-core --\x3e\n        <dependency>\n            <groupId>co.paralleluniverse</groupId>\n            <artifactId>quasar-core</artifactId>\n            <version>0.8.0</version>\n        </dependency>\n    </dependencies>\n\n</project>\nimport co.paralleluniverse.fibers.Fiber;\nimport co.paralleluniverse.fibers.SuspendExecution;\nimport co.paralleluniverse.strands.SuspendableRunnable;\n\npublic class HelloFiber {\n\n    public static void main(String[] args) throws  Exception {\n        long start = System.currentTimeMillis();\n        Runnable r = new Runnable() {\n            @Override\n            public void run() {\n                calc();\n            }\n        };\n\n        int size = 10000;\n\n        Thread[] threads = new Thread[size];\n        for (int i = 0; i < threads.length; i++) {\n            threads[i] = new Thread(r);\n        }\n\n        for (int i = 0; i < threads.length; i++) {\n            threads[i].start();\n        }\n\n        for (int i = 0; i < threads.length; i++) {\n            threads[i].join();\n        }\n\n        long end = System.currentTimeMillis();\n        System.out.println(end - start);\n\n\n    }\n\n    static void calc() {\n        int result = 0;\n        for (int m = 0; m < 10000; m++) {\n            for (int i = 0; i < 200; i++) result += i;\n\n        }\n    }\n}\n\n\nimport co.paralleluniverse.fibers.Fiber;\nimport co.paralleluniverse.fibers.SuspendExecution;\nimport co.paralleluniverse.strands.SuspendableRunnable;\n\npublic class HelloFiber2 {\n\n    public static void main(String[] args) throws  Exception {\n        long start = System.currentTimeMillis();\n\n\n        int size = 10000;\n\n        Fiber<Void>[] fibers = new Fiber[size];\n\n        for (int i = 0; i < fibers.length; i++) {\n            fibers[i] = new Fiber<Void>(new SuspendableRunnable() {\n                public void run() throws SuspendExecution, InterruptedException {\n                    calc();\n                }\n            });\n        }\n\n        for (int i = 0; i < fibers.length; i++) {\n            fibers[i].start();\n        }\n\n        for (int i = 0; i < fibers.length; i++) {\n            fibers[i].join();\n        }\n\n        long end = System.currentTimeMillis();\n        System.out.println(end - start);\n\n\n    }\n\n    static void calc() {\n        int result = 0;\n        for (int m = 0; m < 10000; m++) {\n            for (int i = 0; i < 200; i++) result += i;\n\n        }\n    }\n}\n\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br"),t("span",{staticClass:"line-number"},[s._v("85")]),t("br"),t("span",{staticClass:"line-number"},[s._v("86")]),t("br"),t("span",{staticClass:"line-number"},[s._v("87")]),t("br"),t("span",{staticClass:"line-number"},[s._v("88")]),t("br"),t("span",{staticClass:"line-number"},[s._v("89")]),t("br"),t("span",{staticClass:"line-number"},[s._v("90")]),t("br"),t("span",{staticClass:"line-number"},[s._v("91")]),t("br"),t("span",{staticClass:"line-number"},[s._v("92")]),t("br"),t("span",{staticClass:"line-number"},[s._v("93")]),t("br"),t("span",{staticClass:"line-number"},[s._v("94")]),t("br"),t("span",{staticClass:"line-number"},[s._v("95")]),t("br"),t("span",{staticClass:"line-number"},[s._v("96")]),t("br"),t("span",{staticClass:"line-number"},[s._v("97")]),t("br"),t("span",{staticClass:"line-number"},[s._v("98")]),t("br"),t("span",{staticClass:"line-number"},[s._v("99")]),t("br"),t("span",{staticClass:"line-number"},[s._v("100")]),t("br"),t("span",{staticClass:"line-number"},[s._v("101")]),t("br"),t("span",{staticClass:"line-number"},[s._v("102")]),t("br"),t("span",{staticClass:"line-number"},[s._v("103")]),t("br"),t("span",{staticClass:"line-number"},[s._v("104")]),t("br"),t("span",{staticClass:"line-number"},[s._v("105")]),t("br"),t("span",{staticClass:"line-number"},[s._v("106")]),t("br"),t("span",{staticClass:"line-number"},[s._v("107")]),t("br"),t("span",{staticClass:"line-number"},[s._v("108")]),t("br"),t("span",{staticClass:"line-number"},[s._v("109")]),t("br"),t("span",{staticClass:"line-number"},[s._v("110")]),t("br"),t("span",{staticClass:"line-number"},[s._v("111")]),t("br")])]),t("p",[s._v("作业：目前是10000个Fiber -> 1个JVM线程，想办法提高效率，10000Fiber -> 10份 -> 10Threads")]),s._v(" "),t("h2",{attrs:{id:"纤程的应用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#纤程的应用场景"}},[s._v("#")]),s._v(" 纤程的应用场景")]),s._v(" "),t("p",[s._v("纤程 vs 线程池：很短的计算任务，不需要和内核打交道，并发量高！")]),s._v(" "),t("h2",{attrs:{id:"僵尸进程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#僵尸进程"}},[s._v("#")]),s._v(" 僵尸进程")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <string.h>\n#include <assert.h>\n#include <sys/types.h>\n\nint main() {\n        pid_t pid = fork();\n\n        if (0 == pid) {\n                printf("child id is %d\\n", getpid());\n                printf("parent id is %d\\n", getppid());\n        } else {\n                while(1) {}\n        }\n}\n\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("h2",{attrs:{id:"孤儿进程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#孤儿进程"}},[s._v("#")]),s._v(" 孤儿进程")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <string.h>\n#include <assert.h>\n#include <sys/types.h>\n\nint main() {\n        pid_t pid = fork();\n\n        if (0 == pid) {\n                printf("child ppid is %d\\n", getppid());\n                sleep(10);\n                printf("parent ppid is %d\\n", getppid());\n        } else {\n                printf("parent id is %d\\n", getpid());\n                sleep(5);\n                exit(0);\n        }\n}\n\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("h1",{attrs:{id:"进程调度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程调度"}},[s._v("#")]),s._v(" 进程调度")]),s._v(" "),t("p",[s._v("2.6采用CFS调度策略：Completely Fair Scheduler")]),s._v(" "),t("p",[s._v("按优先级分配时间片的比例，记录每个进程的执行时间，如果有一个进程执行时间不到他应该分配的比例，优先执行")]),s._v(" "),t("p",[s._v("默认调度策略：")]),s._v(" "),t("p",[s._v("实时 （急诊） 优先级分高低 - FIFO (First In First Out)，优先级一样 - RR（Round Robin） 普通： CFS")]),s._v(" "),t("h1",{attrs:{id:"中断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#中断"}},[s._v("#")]),s._v(" 中断")]),s._v(" "),t("p",[t("img",{attrs:{src:a(632),alt:"image-20210519112735470"}})]),s._v(" "),t("p",[s._v("硬件跟操作系统内核打交道的一种机制")]),s._v(" "),t("p",[s._v("软中断（80中断） ==  系统调用")]),s._v(" "),t("p",[s._v("系统调用：int 0x80 或者 sysenter原语")]),s._v(" "),t("p",[s._v("通过ax寄存器填入调用号")]),s._v(" "),t("p",[s._v("参数通过bx cx dx si di传入内核")]),s._v(" "),t("p",[s._v("返回值通过ax返回")]),s._v(" "),t("p",[s._v("java读网络 – jvm read() – c库read() - >")]),s._v(" "),t("p",[s._v("内核空间 -> system_call() （系统调用处理程序）")]),s._v(" "),t("p",[s._v("-> sys_read()")]),s._v(" "),t("h2",{attrs:{id:"从汇编角度理解软中断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从汇编角度理解软中断"}},[s._v("#")]),s._v(" 从汇编角度理解软中断")]),s._v(" "),t("h3",{attrs:{id:"搭建汇编环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搭建汇编环境"}},[s._v("#")]),s._v(" 搭建汇编环境")]),s._v(" "),t("p",[s._v("yum install nasm")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(';hello.asm\n;write(int fd, const void *buffer, size_t nbytes)\n;fd 文件描述符 file descriptor - linux下一切皆文件\n\nsection data\n    msg db "Hello", 0xA\n    len equ $ - msg\n\nsection .text\nglobal _start\n_start:\n\n    mov edx, len\n    mov ecx, msg\n    mov ebx, 1 ;文件描述符1 std_out\n    mov eax, 4 ;write函数系统调用号 4\n    int 0x80\n\n    mov ebx, 0\n    mov eax, 1 ;exit函数系统调用号\n    int 0x80\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("p",[s._v("编译：nasm -f elf  hello.asm -o hello.o")]),s._v(" "),t("p",[s._v("链接：ld -m elf_i386 -o hello hello.o")]),s._v(" "),t("p",[s._v("一个程序的执行过程，要么处于用户态，要么处于内核态")]),s._v(" "),t("h1",{attrs:{id:"内存管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内存管理"}},[s._v("#")]),s._v(" 内存管理")]),s._v(" "),t("h2",{attrs:{id:"内存管理的发展历程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内存管理的发展历程"}},[s._v("#")]),s._v(" 内存管理的发展历程")]),s._v(" "),t("p",[s._v("DOS时代 - 同一时间只能有一个进程在运行（也有一些特殊算法可以支持多进程）")]),s._v(" "),t("p",[s._v("windows9x - 多个进程装入内存 1：内存不够用 2：互相打扰")]),s._v(" "),t("p",[s._v("为了解决这两个问题，诞生了现在的内存管理系统：虚拟地址 分页装入 软硬件结合寻址")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("分页（内存不够用），内存中分成固定大小的页框（4K），把程序（硬盘上）分成4K大小的块，用到哪一块，加载那一块，加载的过程中，如果内存已经满了，会把最不常用的一块放到swap分区， 把最新的一块加载进来，这个就是著名的LRU算法")]),s._v(" "),t("ol",[t("li",[s._v("LRU算法 LeetCode146题，头条要求手撕，阿里去年也要求手撕")]),s._v(" "),t("li",[s._v("Least Recently Used 最不常用")]),s._v(" "),t("li",[s._v("哈希表（保证 查找操作O(1)） + 链表 （保证 排序操作和新增操作 O(1)））")]),s._v(" "),t("li",[s._v("双向链表 （保证 左边指针 指向右边块）")])])]),s._v(" "),t("li",[t("p",[s._v("虚拟内存（解决相互打扰问题）")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("DOS Win31 ... 互相干掉")])]),s._v(" "),t("li",[t("p",[s._v("为了保证互不影响 - 让进程工作在虚拟空间，程序中用到的空间地址不再是直接的物理地址，而是虚拟的地址，这样，A进程永远不可能访问到B进程的空间")])]),s._v(" "),t("li",[t("p",[s._v("虚拟空间多大呢？寻址空间 - 64位系统 2 ^ 64，比物理空间大很多 ，单位是byte")])]),s._v(" "),t("li",[t("p",[s._v("站在虚拟的角度，进程是独享整个系统 + CPU")])]),s._v(" "),t("li",[t("p",[s._v("内存映射：偏移量 + 段的基地址 = 线性地址 （虚拟空间）")]),s._v(" "),t("p",[t("img",{attrs:{src:a(633),alt:"image-20210521110034729"}})])]),s._v(" "),t("li",[t("p",[s._v("线性地址通过 OS + MMU（硬件 Memory Management Unit）")]),s._v(" "),t("p",[t("img",{attrs:{src:a(634),alt:"image-20210521110519501"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(635),alt:"image-20210521110745203"}})])])])]),s._v(" "),t("li",[t("p",[s._v("缺页中断（不是很重要）：")]),s._v(" "),t("ol",[t("li",[s._v("需要用到页面内存中没有，产生缺页异常（中断），由内核处理并加载")])])])]),s._v(" "),t("h2",{attrs:{id:"zgc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zgc"}},[s._v("#")]),s._v(" ZGC")]),s._v(" "),t("p",[s._v("算法叫做：Colored Pointer")]),s._v(" "),t("p",[s._v("GC信息记录在指针上，不是记录在头部， immediate memory use")]),s._v(" "),t("p",[s._v("42位指针 寻址空间4T JDK13 -> 16T 目前为止最大16T 2^44")]),s._v(" "),t("h3",{attrs:{id:"cpu如何区分一个立即数-和-一条指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cpu如何区分一个立即数-和-一条指令"}},[s._v("#")]),s._v(" CPU如何区分一个立即数 和 一条指令")]),s._v(" "),t("p",[s._v("总线内部分为：数据总线 地址总线 控制总线")]),s._v(" "),t("p",[s._v("地址总线目前：48位")]),s._v(" "),t("p",[s._v("颜色指针本质上包含了地址映射的概念")]),s._v(" "),t("h1",{attrs:{id:"内核同步机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内核同步机制"}},[s._v("#")]),s._v(" 内核同步机制")]),s._v(" "),t("h2",{attrs:{id:"关于同步理论的一些基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关于同步理论的一些基本概念"}},[s._v("#")]),s._v(" 关于同步理论的一些基本概念")]),s._v(" "),t("p",[s._v("•临界区（critical area）: 访问或操作共享数据的代码段  简单理解：synchronized大括号中部分（原子性）")]),s._v(" "),t("p",[s._v("•竞争条件（race conditions）两个线程同时拥有临界区的执行权")]),s._v(" "),t("p",[s._v("•数据不一致：data unconsistency 由竞争条件引起的数据破坏")]),s._v(" "),t("p",[s._v("•同步（synchronization）避免race conditions")]),s._v(" "),t("p",[s._v("•锁：完成同步的手段（门锁，门后是临界区，只允许一个线程存在） 上锁解锁必须具备原子性")]),s._v(" "),t("p",[s._v("•原子性（象原子一样不可分割的操作）")]),s._v(" "),t("p",[s._v("•有序性（禁止指令重排）")]),s._v(" "),t("p",[s._v("•可见性（一个线程内的修改，另一个线程可见）")]),s._v(" "),t("p",[s._v("互斥锁 排他锁 共享锁 分段锁")]),s._v(" "),t("h2",{attrs:{id:"内核同步常用方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内核同步常用方法"}},[s._v("#")]),s._v(" 内核同步常用方法")]),s._v(" "),t("p",[s._v("1.原子操作 – 内核中类似于AtomicXXX，位于<linux/types.h>")]),s._v(" "),t("p",[s._v("2.自旋锁 – 内核中通过汇编支持的cas，位于<asm/spinlock.h>")]),s._v(" "),t("p",[s._v("3.读-写自旋 – 类似于ReadWriteLock，可同时读，只能一个写 读的时候是共享锁，写的时候是排他锁")]),s._v(" "),t("p",[s._v("4.信号量 – 类似于Semaphore(PV操作 down up操作 占有和释放） 重量级锁，线程会进入wait，适合长时间持有的锁情况")]),s._v(" "),t("p",[s._v("5.读-写信号量 – downread upread downwrite upwrite （多个写，可以分段写，比较少用）(分段锁）")]),s._v(" "),t("p",[s._v("6.互斥体(mutex) – 特殊的信号量（二值信号量）")]),s._v(" "),t("p",[s._v("7.完成变量 – 特殊的信号量（A发出信号给B，B等待在完成变量上） vfork() 在子进程结束时通过完成变量叫醒父进程 类似于(Latch)")]),s._v(" "),t("p",[s._v("8.BKL：大内核锁（早期，现在已经不用）")]),s._v(" "),t("p",[s._v("9.顺序锁（2.6）： – 线程可以挂起的读写自旋锁 序列计数器（从0开始，写时增加(+1)，写完释放(+1)，读前发现单数， 说明有写线程，等待，读前读后序列一样，说明没有写线程打断）")]),s._v(" "),t("p",[s._v("10.禁止抢占 – preempt_disable()")]),s._v(" "),t("p",[s._v("11.内存屏障 – 见volatile")]),s._v(" "),t("h1",{attrs:{id:"汇编实现引导程序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#汇编实现引导程序"}},[s._v("#")]),s._v(" 汇编实现引导程序")]),s._v(" "),t("h2",{attrs:{id:"编写汇编码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编写汇编码"}},[s._v("#")]),s._v(" 编写汇编码")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('\n; 文件名 boot.asm\n\norg 7c00h                     ; BIOS读入MBR后，从0x7c00h处开始执行\n\n; 下面部分和10h有关中断，10h中断用来显示字符\nmov ax, cs\nmov es, ax\nmov ax, msg\nmov bp, ax                    ; ES:BP表示显示字符串的地址\nmov cx, msgLen                ; CX存字符长度\nmov ax, 1301h                 ; AH=13h表示向TTY显示字符，AL=01h表示显示方式（字符串是否包含显示属性，01h表示不包含）\nmov bx, 000fh                 ; BH=00h表示页号，BL=0fh表示颜色\nmov dl, 0                     ; 列\nint 10h\n\nmsg: db "hello world, welcome to OS!"\nmsgLen: equ $ - msg           ; 字符串长度\ntimes 510 - ($ - $$) db 0     ; 填充剩余部分\ndw 0aa55h                     ; 魔数，必须有这两个字节BIOS才确认是MBR\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("h2",{attrs:{id:"编译"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编译"}},[s._v("#")]),s._v(" 编译")]),s._v(" "),t("p",[s._v("nasm boot.asm -o boot.bin")]),s._v(" "),t("h2",{attrs:{id:"制作启动软盘"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#制作启动软盘"}},[s._v("#")]),s._v(" 制作启动软盘")]),s._v(" "),t("ol",[t("li",[s._v("dd if=/dev/zero of=floppy.img bs=1474560 count=1 "),t("strong",[s._v("生成空白软盘镜像")])]),s._v(" "),t("li",[s._v("dd if=boot.bin of=myos.img bs=512 count=1 "),t("strong",[s._v("制作包含主引导记录boot.bin的启动镜像文件")])]),s._v(" "),t("li",[s._v("dd if=floppy.img of=myos.img skip=1 seek=1 bs=512 count=2879 "),t("strong",[s._v("在 bin 生成的镜像文件后补上空白，成为合适大小的软盘镜像，一共2880个扇区，略过第一个")])])]),s._v(" "),t("h2",{attrs:{id:"用软盘启动系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用软盘启动系统"}},[s._v("#")]),s._v(" 用软盘启动系统")]),s._v(" "),t("ol",[t("li",[s._v("将myos.img下载到windows")]),s._v(" "),t("li",[s._v("VMWare创建空的虚拟机\n"),t("ol",[t("li",[s._v("文件 - 创建新的虚拟机 - 典型")]),s._v(" "),t("li",[s._v("稍后安装操作系统")]),s._v(" "),t("li",[s._v("其他")]),s._v(" "),t("li",[s._v("一路next 完成")]),s._v(" "),t("li",[s._v("虚拟机设置，去掉CD/DVD选项中“启动时连接”")]),s._v(" "),t("li",[s._v("网络，选择“仅主机模式”，勾选“启动时连接”（好像无所谓）")]),s._v(" "),t("li",[s._v("添加软盘驱动器 使用软盘映像 找到myos.img")])])]),s._v(" "),t("li",[s._v("启动虚拟机")])]),s._v(" "),t("h2",{attrs:{id:"为什么是0x7c00"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么是0x7c00"}},[s._v("#")]),s._v(" 为什么是0x7C00?")]),s._v(" "),t("p",[s._v("![img](file:///C:/work/courses/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/imgs/8080%E5%AE%9E%E6%A8%A1%E5%BC%8F%E5%86%85%E5%AD%98%E5%B8%83%E5%B1%80.png)")]),s._v(" "),t("p",[s._v("参考：https://www.glamenv-septzen.net/en/view/6")])])}),[],!1,null,null,null);n.default=e.exports}}]);